--TEST
SELECT E.JOB, E.EMPNO, E.ENAME, E.SAL
     , D.DEPTNO, D.DNAME
  FROM EMP E, DEPT D
 WHERE E.DEPTNO = D.DEPTNO
   AND JOB = (SELECT JOB  --직책 비교
                FROM EMP
               WHERE ENAME = 'ALLEN');

SELECT E.EMPNO, E.ENAME
     , D.DNAME, E.HIREDATE, D.LOC, E.SAL
     , S.GRADE
  FROM EMP E, DEPT D, SALGRADE S
 WHERE E.DEPTNO = D.DEPTNO
   AND E.SAL BETWEEN S.LOSAL AND S.HISAL
   AND SAL > (SELECT AVG(SAL)
                FROM EMP)
 ORDER BY E.SAL DESC, E.EMPNO;--테이블 구조 확인
 
SELECT E.EMPNO, E.ENAME, E.JOB, E.DEPTNO
     , D.DNAME, D.LOC
  FROM EMP E, DEPT D
 WHERE E.DEPTNO = D.DEPTNO
   AND E.DEPTNO = 10
   AND JOB NOT IN (SELECT DISTINCT JOB
                     FROM EMP
                    WHERE DEPTNO = 30);
 
SELECT E.EMPNO, E.ENAME, E.SAL, S.GRADE
  FROM EMP E, SALGRADE S
 WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL
   AND E.SAL > (SELECT MAX(SAL)
                  FROM EMP
                 WHERE JOB = 'SALESMAN')
 ORDER BY E.EMPNO;

--10
--Q1
CREATE TABLE DEPT_TEST
    AS SELECT * FROM DEPT;
SELECT * FROM DEPT_TEST;
COMMIT;
--Q2
INSERT INTO DEPT_TEST(DEPTNO, DNAME, LOC) VALUES (50, 'ORACLE', 'BUSAN');
INSERT INTO DEPT_TEST(DEPTNO, DNAME, LOC) VALUES (60, 'SQL', 'ILSAN');
INSERT INTO DEPT_TEST(DEPTNO, DNAME, LOC) VALUES (70, 'SELECT', 'INCHEON');
INSERT INTO DEPT_TEST(DEPTNO, DNAME, LOC) VALUES (80, 'DML', 'BUNDANG');

CREATE TABLE EMP_TEST
    AS SELECT * FROM EMP;
SELECT * FROM EMP_TEST;
COMMIT;
--Q3
INSERT INTO EMP_TEST(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        VALUES(7201, 'TEST_USER1', 'MANAGER', 7788, TO_DATE('2016/01/02', 'YYYY/MM/DD'), 4500, '', 50);
INSERT INTO EMP_TEST(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        VALUES(7202, 'TEST_USER2', 'CLERK', 7201, TO_DATE('2016/02/21', 'YYYY/MM/DD'), 1800, '', 50);        
INSERT INTO EMP_TEST(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        VALUES(7203, 'TEST_USER3', 'ANALTST', 7201, TO_DATE('2016/04/11', 'YYYY/MM/DD'), 3400, '', 60);
INSERT INTO EMP_TEST(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        VALUES(7204, 'TEST_USER4', 'SALESMAN', 7201, TO_DATE('2016/05/31', 'YYYY/MM/DD'), 2700, '300', 60);
INSERT INTO EMP_TEST(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        VALUES(7205, 'TEST_USER5', 'CLERK', 7201, TO_DATE('2016/07/20', 'YYYY/MM/DD'), 2600, '', 70);
INSERT INTO EMP_TEST(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        VALUES(7206, 'TEST_USER6', 'CLERK', 7201, TO_DATE('2016/09/08', 'YYYY/MM/DD'), 2600, '', 70);
INSERT INTO EMP_TEST(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        VALUES(7207, 'TEST_USER7', 'LECTURER', 7201, TO_DATE('2016/10/28', 'YYYY/MM/DD'), 2300, '', 80);
INSERT INTO EMP_TEST(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        VALUES(7208, 'TEST_USER8', 'STUDENT', 7201, TO_DATE('2016/03/09', 'YYYY/MM/DD'), 1200, '', 80);
INSERT INTO EMP_TEST(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
        VALUES(7206, 'TEST', 'CLERK', 7201, TO_DATE('2016/09/08', 'YYYY/MM/DD'), 2600, '', 70);
SELECT * FROM EMP_TEST;
ROLLBACK;
COMMIT;
UPDATE EMP_TEST
   SET DEPTNO = 70
 WHERE SAL >(SELECT AVG(SAL)
               FROM EMP_TEST
              WHERE DEPTNO = 50);
SELECT * FROM EMP_TEST
 WHERE SAL > 3150;
--Q4
UPDATE EMP_TEST
   SET SAL = SAL*1.1, DEPTNO = 80
 WHERE HIREDATE > (SELECT MAX(HIREDATE)
                     FROM EMP_TEST
                    WHERE DEPTNO = 60);

--Q5




SELECT E.JOB AS 직종, E.EMPNO AS 직원번호, E.ENAME AS 직원명, P1.JOB_ID, E.SAL AS 월급여
     , D.DEPTNO 부서번호, D.DNAME AS 부서
     , S.GRADE
     , M.ENAME AS 상사, P2.JOB_ID, M.EMPNO AS 상관_번호
     , M.SAL - E.SAL AS 책임비용
  FROM EMP E, EMP M
     , DEPT D
     , SALGRADE S
     , EMPLOYEES P1, EMPLOYEES P2
     , JOBS J1, JOBS J2
 WHERE E.DEPTNO = D.DEPTNO(+)
   AND E.MGR = M.EMPNO(+)
   AND E.SAL BETWEEN S.LOSAL(+) AND S.HISAL(+)
   AND E.ENAME = P1.FIRST_NAME(+)
   AND M.ENAME = P2.FIRST_NAME(+)
   AND P1.JOB_ID = J1.JOB_ID(+)
   AND P2.JOB_ID = J2.JOB_ID(+)
 ORDER BY P1.EMPLOYEE_ID;


SELECT *
  FROM JOBS;
  
SELECT *
  FROM EMP;


SELECT *
  FROM EMPLOYEES;

SELECT *
  FROM EMPLOYEES
  WHERE LAST_NAME = 'SMITH';



--13장  사용자가 접속한 데이터베이스 EX)HR, SCOTT 

SELECT * FROM DICT;
SELECT * FROM DICTIONARY;  --사용 가능한 데이터 출력  (데이터 사전)

--USER_ㅁㅁㅁㅁ=>객체정보 출력
SELECT TABLE_NAME
  FROM USER_TABLES;--HR계정이 가진 테이블 명 모두 출력
--USER_, ALL_, DBA_ 뒤에는 복수형으로 표기  => EX) USER_TABLES, ALL_TABLES, DBA_TABLES

SELECT TABLE_NAME
  FROM ALL_TABLES;  --HR 계정에서 사용이 허락된 객체정보 출력  --OWNER = 소유한 사용자 명시(ALL_TABLES 에서만 나옴)
  
SELECT *
  FROM DBA_TABLES;  --table or view does not exist  --관리자 권한 없음   --SYSTEM계정으로 접속하면 볼수 있음

--INDEX = 데이터 위치 찾기 

--TABLE FULL SCAN = 데이터를 처음부터 끝까지 뒤져서(노가다) 찾는 방법
--INDEX SCAN = 인덱스(EX목차검색)를 통해서 찾는 방법

SELECT * FROM USER_INDEXES;  --인덱스 정보 출력

SELECT * FROM USER_IND_COLUMNS;--인덱스 컬럼정보 출력

--CREATE INDEX 인덱스 이름
--    ON 테이블 이름 (열이름 ASC OR DESC, ...);

--인덱스 생성
CREATE INDEX IDX_EMP_SAL
    ON EMP(SAL);
SELECT * FROM USER_IND_COLUMNS;

--인덱스 삭제  DROP INDEX  인덱스 이름
DROP INDEX IDX_EMP_SAL;
SELECT * FROM USER_IND_COLUMNS;







--Q1 
--1-1
CREATE TABLE EMPIDX
    AS (SELECT *
          FROM EMP);
--1-2          
CREATE INDEX IDX_EMPIDX_EMPNO
    ON EMPIDX(EMPNO);
    
--1-3
SELECT * FROM USER_IND_COLUMNS;

--Q2
CREATE OR REPLACE VIEW EMPNO_OVER15K
    AS (SELECT EMPNO, ENAME, JOB, DEPTNO, SAL, NVL2(COMM, 'O','X') AS COMM
          FROM EMPIDX
         WHERE SAL > 1500);

SELECT * FROM EMPNO_OVER15K;

--Q3
--3-1
CREATE TABLE DEPTSEQ
    AS SELECT * FROM DEPT;
    
SELECT * FROM DEPTSEQ;
DROP TABLE DEPTSEQ;

--3-2
CREATE SEQUENCE SEQ_DEPTSEQ
INCREMENT BY 1
START WITH 1
MAXVALUE 99
MINVALUE 1
NOCYCLE
NOCACHE;

SELECT DEPTNO FROM DEPTSEQ;
